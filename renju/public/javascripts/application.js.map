{"version":3,"sources":["../javascripts_src/application.js"],"names":[],"mappings":"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","file":"application.js","sourcesContent":["const application = {};\n\napplication.gameView = function(svg, color, options) {\n    const self = this;\n\n    options = options || {};\n\n    const cellWidth = options.hasOwnProperty('cellWidth') ? options.cellWidth : 21;\n    const cellHeight = options.hasOwnProperty('cellHeight') ? options.cellHeight : 21;\n    const figureSize = options.hasOwnProperty('figureSize') ? options.figureSize : 10;\n    const pointerSize = options.hasOwnProperty('pointerSize') ? options.pointerSize : 7;\n\n    let pointerIsHidden = !pointerSize;\n\n    const dispatch = d3.dispatch(\"move\");\n\n    let moves = [];\n\n    svg.append('rect')\n        .attr('width', window.innerWidth)\n        .attr('height', window.innerHeight)\n        .style('pointer-events', 'all')\n        .style('fill', 'none');\n\n    const container = svg.append('g');\n    const gridContainer = container.append('g');\n    const pointer = container.append('circle').attr('class', color + ' pointer').attr('r', pointerSize);\n    const figureContainer = container.append('g');\n\n    const zoom = d3.zoom()\n        .scaleExtent([0.3, 3])\n        .on('zoom', () => { container.attr('transform', d3.event.transform) });\n    svg.call(zoom);\n    svg.on('dblclick.zoom', null);  // disable zooming on double click\n\n    svg.on('mousemove', () => {\n        const c = d3.mouse(container.node());\n        const x = Math.round((c[0] - 1) / cellWidth) * cellWidth;\n        const y = Math.round((c[1] - 1) / cellHeight) * cellHeight;\n        pointer.attr('transform', 'translate(' + x + ', ' + y + ')')\n    });\n    svg.on('click', () => {\n        if (!pointerIsHidden) {\n            const c = d3.mouse(container.node());\n            const x = Math.round((c[0] - 1) / cellWidth);\n            const y = Math.round((c[1] - 1) / cellHeight);\n            dispatch.call('move', document, x, y);\n        }\n    });\n\n    const updateFigures = function() {\n        const all = figureContainer.selectAll('.figure').data(moves, d => d);\n        all.exit().remove();\n        const enter = all.enter().append('g');\n        enter.attr('class', d => d.color + ' figure').classed('last_move', d => d.lastMove);\n        enter.append('circle').attr('r', figureSize);\n        enter.append('text').text(d => d.move).attr('text-anchor', 'middle').attr('y', figureSize / 2.5);\n\n        enter.merge(all)\n             .attr('transform', d => 'translate(' + d.x * cellWidth + ', ' + d.y * cellHeight + ')');\n    };\n\n    const updateGrid = function () {\n        const xExtent = d3.extent(moves, d => d.x);\n        const yExtent = d3.extent(moves, d => d.y);\n        const lx = Math.min(xExtent[0] || 0, 0);\n        const ly = Math.min(yExtent[0] || 0, 0);\n        const hx = Math.max(xExtent[1] || 0, 0);\n        const hy = Math.max(yExtent[1] || 0, 0);\n\n        const v_grid = gridContainer.selectAll('.v_grid').data(d3.range(lx - 100, hx + 101), d => d);\n        v_grid.exit().remove();\n        v_grid.enter().append('line').attr('class', 'v_grid')\n            .merge(v_grid)\n              .attr('x1', d => d * cellWidth)\n              .attr('x2', d => d * cellWidth)\n              .attr('y1', (ly - 100) * cellHeight)\n              .attr('y2', (hy + 100) * cellHeight);\n\n        const h_grid = gridContainer.selectAll('.h_grid').data(d3.range(ly - 100, hy + 101), d => d);\n        h_grid.exit().remove();\n        h_grid.enter().append('line').attr('class', 'h_grid')\n              .merge(h_grid)\n              .attr('y1', d => d * cellHeight)\n              .attr('y2', d => d * cellHeight)\n              .attr('x1', (lx - 100) * cellWidth)\n              .attr('x2', (hx + 100) * cellWidth);\n    };\n\n    self.update = function() {\n        updateFigures();\n        updateGrid();\n    };\n\n    self.setState = function(state) {\n        moves = state.hasOwnProperty('moves') ? d3.values(state.moves) : moves;\n    };\n\n    self.setPointerVisible = function() {\n        pointer.attr('r', pointerSize);\n        pointerIsHidden = !pointerSize;\n    };\n\n    self.setPointerInvisible = function() {\n        pointer.attr('r', 0);\n        pointerIsHidden = true;\n    };\n\n    self.on = function(type, listener) {\n        return dispatch.on(type, listener);\n    };\n};\n\n\napplication.gameController = function(vs, status, svg, gameId) {\n    status.text('Connecting...');\n\n    const socket = io();\n    socket.emit('handshake', gameId);\n\n    let view = null;\n    let currentMove = -1;\n    let color = null;\n\n    const onMove = function(x, y) {\n        socket.emit('move', {x: x, y: y, currentMove: currentMove})\n    };\n\n    socket.on('handshake response', (data) => {\n        color = data.color;\n\n        view = new application.gameView(svg, color);\n\n        if (data.status !== 'New' && data.status !== 'In progress') {\n            status.text(data.status);\n        } else if (color != 'white' && color != 'black') {\n            status.text('Joined as spectrator');\n        } else {\n            status.text('Joined as ' + color);\n            view.on('move', onMove);\n        }\n\n        socket.emit('fetch state');\n\n        view.setPointerInvisible();\n        view.update();\n    });\n\n    socket.on('update', (state) => {\n        vs.text('(' + (state.user1 || '...') + ' vs ' + (state.user2 || '...') + ')');\n\n        view.setState(state.data);\n        view.update();\n\n        currentMove = state.data.currentMove;\n\n        if (state.status != 'In progress') {\n            view.setPointerInvisible();\n        } else if (state.data.currentMovePlayer === color) {\n            view.setPointerVisible();\n            statusSel.text('Your turn');\n        } else {\n            view.setPointerInvisible();\n            if (color === 'black' || color === 'white') {\n                statusSel.text('Waiting for opponent');\n            }\n        }\n\n        if (state.status === 'Finished') {\n            statusSel.text('Finished');\n        }\n    });\n\n    socket.on('err', (data) => {\n        statusSel.text('Error: ' + data);\n    })\n};\n"]}